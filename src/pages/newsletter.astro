---
// Importar el layout y componentes
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import ArticleCards from '../components/ArticleCards.astro';

// Obtener las publicaciones
const posts = await getCollection('posts');

// Ordenar los posts por fecha de manera descendente
const sortedPosts = posts.sort((a, b) => new Date(b.data.date) - new Date(a.data.date));

// Paginación
const postsPerPage = 10; // Número de posts por página
const totalPages = Math.ceil(sortedPosts.length / postsPerPage); // Total de páginas

// Obtener el número de página de los parámetros de consulta
const currentPage = parseInt(new URL(Astro.request.url).searchParams.get('page')) || 1;

// Obtener los posts de la página actual
const currentPosts = sortedPosts.slice((currentPage - 1) * postsPerPage, currentPage * postsPerPage);
---

<Layout   
  title="Newsletter"
  description='Últimas noticias de este mundo tecnológico'
>
<main class="px-4">
  <div class="space-y-24">
    <section class="newsletter-section py-8 px-4">
      <h1 class="newsletter-title text-4xl font-bold mb-4">Join the Newsletter</h1>
      <p class="newsletter-description text-lg mb-4">
        Stay updated with my latest tutorials, projects, and coding insights. Subscribe to the newsletter and get exclusive content directly in your inbox!
      </p>
      
      <form id="newsletter-form" class="newsletter-form flex flex-col gap-4 mb-8">
        <input type="text" id="name" name="name" placeholder="Enter your name" required class="input-field p-2 border rounded">
        <input type="email" id="email" name="email" placeholder="Enter your email" required class="input-field p-2 border rounded">
        <button type="submit" class="submit-btn bg-blue-500 text-white px-4 py-2 rounded">
          Subscribe
        </button>
      </form>
      
      <div id="newsletter-notification" class="notification"></div>

      <h2 class="text-3xl font-bold mb-4">Latest Posts</h2>
      <div class="article-card-grid">
        {currentPosts && currentPosts.length > 0 ? (
          currentPosts.map(post => (
            <ArticleCards
              href={`/newsletter/${post.slug}`}
              title={post.data.title}
              source={post.data.source || "newsletter.com"}
              description={post.data.description}
            />
          ))
        ) : (
          <p>No posts available.</p>
        )}
      </div>

      <div class="pagination">
        {currentPage > 1 && (
          <a href={`?page=${currentPage - 1}`} class="pagination-btn">Previous</a>
        )}
        <span>Page {currentPage} of {totalPages}</span>
        {currentPage < totalPages && (
          <a href={`?page=${currentPage + 1}`} class="pagination-btn">Next</a>
        )}
      </div>
    </section>
  </div>
</main>
</Layout>

<style>
.article-card-grid {
  display: flex;
  flex-direction: column;
  gap: 16px; /* Espacio entre las tarjetas */
}

.newsletter-section {
  padding: 2rem;
  padding-top: 100px;
  border-radius: 12px;
  max-width: 900px;
  margin: 0 auto;
  transition: background-color 0.3s ease;
}

/* Título de la newsletter */
.newsletter-title {
  text-align: center;
  color: var(--text-color-light);
  margin-bottom: 2rem;
}

/* Descripción de la newsletter */
.newsletter-description {
  text-align: center;
  margin-bottom: 2rem;
  color: var(--text-color-dark);
}

html.dark .newsletter-description {
  color: var(--text-color-light);
}

/* Estilos del formulario */
.newsletter-form {
  max-width: 500px;
  margin: 0 auto 2rem;
}

.input-field {
  padding: 0.75rem;
  border: 1px solid rgba(var(--accent-dark), 0.4);
  border-radius: 8px;
  font-size: 1rem;
  background-color: rgba(var(--accent-light), 0.15);
  color: var(--text-color-dark);
}

html.dark .input-field {
  background-color: rgba(var(--accent-dark), 0.2);
  color: var(--text-color-light);
}

.input-field:focus {
  border-color: var(--accent);
  outline: none;
  box-shadow: 0 0 0 2px rgba(var(--accent), 0.5);
}

.submit-btn {
  background-color: var(--brand-blue);
  color: white;
  font-size: 1.1rem;
  padding: 0.75rem;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.submit-btn:hover {
  background-color: rgba(var(--brand-blue), 0.8);
  transform: translateY(-3px);
}

html.dark .submit-btn {
  background-color: var(--accent);
}

html.dark .submit-btn:hover {
  background-color: rgba(var(--accent-light), 0.9);
}

/* Estilos de paginación */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 16px;
}

.pagination-btn {
  margin: 0 8px;
  padding: 8px 12px;
  background-color: #374364; /* Color del botón */
  color: white;
  border: none;
  border-radius: 5px;
  text-decoration: none; /* Quitar subrayado */
  cursor: pointer;
}

.pagination-btn:hover {
  background-color: #2a2f3e; /* Color al pasar el ratón */
}

/* Responsividad */
@media (max-width: 768px) {
  .newsletter-title {
    font-size: 2.5rem;
  }

  .newsletter-description {
    font-size: 1rem;
  }

  .input-field {
    font-size: 0.9rem;
  }

  .submit-btn {
    font-size: 1rem;
  }
}

.notification {
        position: fixed;
        top: 20px; /* Distancia desde la parte superior */
        right: 20px; /* Distancia desde el borde derecho */
        padding: 1rem;
        margin-bottom: 1rem;
        text-align: center;
        border-radius: 5px;
        display: none;
        font-size: 1rem;
        z-index: 9999; /* Para que se muestre por encima de otros elementos */
        width: 300px; /* Ajusta el ancho de la notificación */
    }

    .notification.success {
        background-color: #4caf50; /* Verde para éxito */
        color: white;
    }

    .notification.error {
        background-color: #f44336; /* Rojo para error */
        color: white;
    }
</style>

<script>
document.getElementById('newsletter-form').addEventListener('submit', async function (e) {
  e.preventDefault();

  const name = document.getElementById('name').value;
  const email = document.getElementById('email').value;

  try {
    const response = await fetch('/api/subscribe', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ name, email }),  // Enviar nombre y email
    });

    if (response.ok) {
      showNotification('Te has suscrito correctamente a la newsletter', 'success');
    } else if (response.status === 409) {
      showNotification('Este correo ya está suscrito a la newsletter.', 'error');
    } else if (response.status >= 500) {
      showNotification('Hubo un error en el servidor. Intenta nuevamente más tarde.', 'error');
    } else {
      showNotification('Hubo un error al suscribirte. Intenta nuevamente', 'error');
    }
  } catch (error) {
    console.error('Error de red:', error);
    showNotification('No se pudo conectar con el servidor. Revisa tu conexión a Internet.', 'error');
  }
});

function showNotification(message, type) {
  const notification = document.getElementById('newsletter-notification');
  notification.textContent = message;
  notification.className = `notification ${type}`;
  notification.style.display = 'block';
  setTimeout(() => {
    notification.style.display = 'none';
  }, 5000);
}
</script>
