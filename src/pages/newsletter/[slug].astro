---
import { getCollection, getEntryBySlug } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

const { slug } = Astro.params;
const post = await getEntryBySlug('posts', slug);

if (!post) {
  throw new Error(`Post con slug "${slug}" no encontrado`);
}

const { Content } = await post.render();
export const prerender = true;
const words = post.body.split(' ').length;
const readingTime = Math.ceil(words / 200);
---
<Layout title={post.data.title} description={post.data.description}>
  <main class="px-4 py-10">
    <div class="flex justify-center">
      <section class="services-section py-8 px-4 max-w-2xl w-full">
        <h1 class="services-title text-4xl font-bold mb-4 text-center text-[var(--text-color-dark)] dark:text-[var(--text-color-light)]">{post.data.title}</h1>
       
        <div class="post-info-container border-t border-b border-gray-300 py-2">
          <div class="flex justify-between items-center">
            <p class="text-sm text-left py-2 ml-4 text-[var(--text-color-dark)] dark:text-gray-300">
              {readingTime} min · {new Date(post.data.date).toLocaleDateString()}
            </p>
            <!-- Botón de compartir -->
            <button id="shareButton" aria-label="Share Post" class="be cg bf bg bh as bi vx at au av fz ou ov ow ox we wf wg wh af wi wj wk wl wm wn wo ah wp wq wr">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                <path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Notificación de copiado -->
        <div id="notification" class="notification"></div>
        
        {post.data.image && (
          <img src={post.data.image} alt={post.data.title} class="max-w-full h-auto block mx-auto my-4" />
        )}

        <div class="article-content text-[var(--text-color-dark)] dark:text-[var(--text-color-light)]">
          <Content />
        </div>
      </section>
    </div>
  </main>
</Layout>

<!-- Estilos -->
<style>
.post-info-container {
  border-top: 1px solid #e5e7eb;
  border-bottom: 1px solid #e5e7eb;
  padding: 10px 0;
}

.post-info-container p {
  text-align: left;
  font-size: 0.875rem; /* Tamaño de texto pequeño */
}

.post-info-container p.dark {
  color: #d1d5db; /* Color del texto en modo oscuro */
}

#shareButton:hover svg path {
    fill: var(--red); /* Cambia el color del ícono SVG */
}

#shareButton:hover {
  color: var(--red); /* Cambia el color del texto y del SVG */
}

.notification {
  display: none;
  position: fixed;
  top: 20px;
  right: 20px;
  padding: 10px;
  background-color: #4caf50; /* Verde para éxito */
  color: white;
  border-radius: 5px;
}

.notification.show {
  display: block;
}
</style>

<!-- JavaScript para manejar el copiado al portapapeles -->
<script>
  document.getElementById('shareButton')?.addEventListener('click', function() {
    const postUrl = window.location.href; // Obtiene el URL del post actual

    // Copia el enlace al portapapeles
    navigator.clipboard.writeText(postUrl).then(() => {
      // Muestra la notificación de éxito
      const notification = document.getElementById('notification');
      notification!.textContent = '¡Enlace copiado al portapapeles!';
      notification!.classList.add('show');

      // Oculta la notificación después de 3 segundos
      setTimeout(() => {
        notification?.classList.remove('show');
      }, 3000);
    }).catch(err => {
      // Maneja errores si la copia falla
      const notification = document.getElementById('notification');
      notification!.textContent = 'Error al copiar el enlace';
      notification!.classList.add('error', 'show');

      // Oculta la notificación después de 3 segundos
      setTimeout(() => {
        notification!.classList.remove('show');
      }, 3000);
    });
  });
</script>
